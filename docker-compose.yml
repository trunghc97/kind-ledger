version: "3.9"

services:
  postgres:
    image: postgres:15
    container_name: kindledger-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: kindledger
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./sql/init.sql:/docker-entrypoint-initdb.d/01-init.sql
      - ./sql/backup:/backup
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d kindledger"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - kindledger-net

  redis:
    image: redis:7-alpine
    container_name: kindledger-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - kindledger-net

  mongodb:
    image: mongo:latest
    container_name: kindledger-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: kindledger
    volumes:
      - mongodb_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - kindledger-net

  ipfs:
    image: ipfs/go-ipfs:latest
    container_name: kindledger-ipfs
    restart: unless-stopped
    ports:
      - "5001:5001"
      - "8081:8080"
    environment:
      IPFS_PROFILE: server
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5001/api/v0/id"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - kindledger-net

  besu-validator:
    image: hyperledger/besu:23.10
    container_name: kindledger-besu-validator
    restart: unless-stopped
    ports:
      - "8545:8545"
      - "30303:30303"
    volumes:
      - ./blockchain/genesis.json:/config/genesis.json
      - besu_validator_data:/data
      - ./blockchain/keys:/keys
    command: [
      "--data-path=/data",
      "--genesis-file=/config/genesis.json",
      "--rpc-http-enabled",
      "--rpc-http-host=0.0.0.0",
      "--rpc-http-port=8545",
      "--rpc-http-cors-origins=*",
      "--rpc-http-api=ETH,NET,WEB3,ADMIN,IBFT,EEA,PRIV,TRACE",
      "--p2p-host=0.0.0.0",
      "--p2p-port=30303",
      "--min-gas-price=0",
      "--logging=INFO"
    ]
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8545"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - kindledger-net


  gateway:
    build: 
      context: ./gateway
      dockerfile: Dockerfile
      cache_from:
        - kindledger-gateway:latest
    container_name: kindledger-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      POSTGRES_URL: jdbc:postgresql://postgres:5432/kindledger
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      REDIS_URL: redis://redis:6379
      MONGODB_URL: mongodb://admin:password@mongodb:27017/kindledger
      IPFS_URL: http://ipfs:5001
      BESU_VALIDATOR_URL: http://besu-validator:8545
      BESU_OBSERVER_URL: http://besu-observer:8545
      JAVA_OPTS: "-Xmx1g -Xms512m -XX:+UseG1GC"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      ipfs:
        condition: service_healthy
      besu-validator:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    networks:
      - kindledger-net

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      cache_from:
        - kindledger-frontend:latest
    container_name: kindledger-frontend
    restart: unless-stopped
    ports:
      - "4200:80"
    depends_on:
      gateway:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kindledger-net

  explorer:
    build: 
      context: ./explorer
      dockerfile: Dockerfile
      cache_from:
        - kindledger-explorer:latest
    container_name: kindledger-explorer
    restart: unless-stopped
    ports:
      - "8088:8088"
    environment:
      BESU_URL: http://besu-validator:8545
      NODE_ENV: production
    depends_on:
      besu-validator:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8088/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - kindledger-net

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/postgres
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/redis
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/mongodb
  ipfs_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/ipfs
  besu_validator_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/besu-validator
  besu_observer_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/besu-observer

networks:
  kindledger-net:
    name: kindledger-net
    driver: bridge
