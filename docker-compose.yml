# Docker Compose file for Kind-Ledger with Hyperledger Fabric

services:
  # Hyperledger Fabric Orderer
  orderer:
    image: hyperledger/fabric-orderer:2.5
    container_name: orderer.kindledger.com
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - ./blockchain/artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - ./blockchain/crypto-config/ordererOrganizations/orderer.kindledger.com/orderers/orderer.orderer.kindledger.com/msp:/var/hyperledger/orderer/msp
      - ./blockchain/crypto-config/ordererOrganizations/orderer.kindledger.com/orderers/orderer.orderer.kindledger.com/tls/:/var/hyperledger/orderer/tls
      - orderer_data:/var/hyperledger/production/orderer
    ports:
      - "7050:7050"
    networks:
      fabric-net:
        aliases:
          - orderer.kindledger.com
          - orderer.orderer.kindledger.com
          - orderer

  # MBBank Peer
  peer0.mb.kindledger.com:
    image: hyperledger/fabric-peer:2.5
    container_name: peer0.mb.kindledger.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=kindledger_fabric-net
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.mb.kindledger.com
      - CORE_PEER_ADDRESS=peer0.mb.kindledger.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.mb.kindledger.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.mb.kindledger.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.mb.kindledger.com:7051
      - CORE_PEER_LOCALMSPID=MBBankMSP
    volumes:
      - /var/run/:/host/var/run/
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./blockchain/crypto-config/peerOrganizations/mb.kindledger.com/peers/peer0.mb.kindledger.com/msp:/etc/hyperledger/fabric/msp
      - ./blockchain/crypto-config/peerOrganizations/mb.kindledger.com/peers/peer0.mb.kindledger.com/tls:/etc/hyperledger/fabric/tls
      - ./blockchain/crypto-config/ordererOrganizations/orderer.kindledger.com/orderers/orderer.orderer.kindledger.com/tls/ca.crt:/etc/hyperledger/fabric/orderer-tls/ca.crt:ro
      - peer0_mb_data:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - "7051:7051"
    depends_on:
      - orderer
    networks:
      - fabric-net

  # Charity Peer
  peer0.charity.kindledger.com:
    image: hyperledger/fabric-peer:2.5
    container_name: peer0.charity.kindledger.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=kindledger_fabric-net
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.charity.kindledger.com
      - CORE_PEER_ADDRESS=peer0.charity.kindledger.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.charity.kindledger.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.mb.kindledger.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.charity.kindledger.com:7051
      - CORE_PEER_LOCALMSPID=CharityMSP
    volumes:
      - /var/run/:/host/var/run/
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./blockchain/crypto-config/peerOrganizations/charity.kindledger.com/peers/peer0.charity.kindledger.com/msp:/etc/hyperledger/fabric/msp
      - ./blockchain/crypto-config/peerOrganizations/charity.kindledger.com/peers/peer0.charity.kindledger.com/tls:/etc/hyperledger/fabric/tls
      - ./blockchain/crypto-config/ordererOrganizations/orderer.kindledger.com/orderers/orderer.orderer.kindledger.com/tls/ca.crt:/etc/hyperledger/fabric/orderer-tls/ca.crt:ro
      - peer0_charity_data:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - "8051:7051"
    depends_on:
      - orderer
    networks:
      - fabric-net

  # Supplier Peer
  peer0.supplier.kindledger.com:
    image: hyperledger/fabric-peer:2.5
    container_name: peer0.supplier.kindledger.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=kindledger_fabric-net
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.supplier.kindledger.com
      - CORE_PEER_ADDRESS=peer0.supplier.kindledger.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.supplier.kindledger.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.mb.kindledger.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.supplier.kindledger.com:7051
      - CORE_PEER_LOCALMSPID=SupplierMSP
    volumes:
      - /var/run/:/host/var/run/
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./blockchain/crypto-config/peerOrganizations/supplier.kindledger.com/peers/peer0.supplier.kindledger.com/msp:/etc/hyperledger/fabric/msp
      - ./blockchain/crypto-config/peerOrganizations/supplier.kindledger.com/peers/peer0.supplier.kindledger.com/tls:/etc/hyperledger/fabric/tls
      - ./blockchain/crypto-config/ordererOrganizations/orderer.kindledger.com/orderers/orderer.orderer.kindledger.com/tls/ca.crt:/etc/hyperledger/fabric/orderer-tls/ca.crt:ro
      - peer0_supplier_data:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - "9051:7051"
    depends_on:
      - orderer
    networks:
      - fabric-net

  # Auditor Peer
  peer0.auditor.kindledger.com:
    image: hyperledger/fabric-peer:2.5
    container_name: peer0.auditor.kindledger.com
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=kindledger_fabric-net
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.auditor.kindledger.com
      - CORE_PEER_ADDRESS=peer0.auditor.kindledger.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.auditor.kindledger.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.mb.kindledger.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.auditor.kindledger.com:7051
      - CORE_PEER_LOCALMSPID=AuditorMSP
    volumes:
      - /var/run/:/host/var/run/
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ./blockchain/crypto-config/peerOrganizations/auditor.kindledger.com/peers/peer0.auditor.kindledger.com/msp:/etc/hyperledger/fabric/msp
      - ./blockchain/crypto-config/peerOrganizations/auditor.kindledger.com/peers/peer0.auditor.kindledger.com/tls:/etc/hyperledger/fabric/tls
      - ./blockchain/crypto-config/ordererOrganizations/orderer.kindledger.com/orderers/orderer.orderer.kindledger.com/tls/ca.crt:/etc/hyperledger/fabric/orderer-tls/ca.crt:ro
      - peer0_auditor_data:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - "10051:7051"
    depends_on:
      - orderer
    networks:
      - fabric-net

  # Fabric Setup Service (runs once to initialize)
  fabric-setup:
    image: hyperledger/fabric-tools:2.5
    container_name: fabric-setup
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: |
      sh -c '
        echo "Setting up Fabric network..." &&
        sleep 30 &&
        echo "Fabric setup completed!"
      '
    volumes:
      - ./blockchain/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
      - ./blockchain/artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
      - ./blockchain/chaincode:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode
    depends_on:
      - orderer
      - peer0.mb.kindledger.com
      - peer0.charity.kindledger.com
      - peer0.supplier.kindledger.com
      - peer0.auditor.kindledger.com
    networks:
      - fabric-net
    restart: "no"

  # Fabric Tools Container for crypto generation and operations
  fabric-tools:
    image: hyperledger/fabric-tools:2.5
    container_name: fabric-tools
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: sleep infinity
    volumes:
      - ./blockchain:/opt/gopath/src/github.com/hyperledger/fabric/peer/blockchain
      - ./gateway/wallet:/opt/gopath/src/github.com/hyperledger/fabric/peer/wallet
      - ./explorer/wallet:/opt/gopath/src/github.com/hyperledger/fabric/peer/explorer-wallet
      - ./blockchain/crypto-config/ordererOrganizations/orderer.kindledger.com/orderers/orderer.orderer.kindledger.com/tls/ca.crt:/etc/hyperledger/fabric/orderer-tls/ca.crt:ro
    networks:
      - fabric-net

  # CLI Container for Fabric operations
  cli:
    image: hyperledger/fabric-tools:2.5
    container_name: cli
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
      - ./blockchain/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
      - ./blockchain/artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/channel-artifacts
      - ./blockchain/chaincode:/opt/gopath/src/github.com/hyperledger/fabric/peer/chaincode
    depends_on:
      - orderer
      - peer0.mb.kindledger.com
      - peer0.charity.kindledger.com
      - peer0.supplier.kindledger.com
      - peer0.auditor.kindledger.com
    networks:
      - fabric-net

  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: kindledger-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=kindledger
      - POSTGRES_USER=kindledger
      - POSTGRES_PASSWORD=kindledger123
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kindledger -d kindledger"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - fabric-net

  # MongoDB Database
  mongodb:
    image: mongo:8
    container_name: kindledger-mongodb
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=kindledger
      - MONGO_INITDB_ROOT_PASSWORD=kindledger123
      - MONGO_INITDB_DATABASE=kindledger
    volumes:
      - ./data/mongo:/data/db
      - ./database/mongodb/init:/docker-entrypoint-initdb.d
    ports:
      - "27017:27017"
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "none"
    networks:
      - fabric-net

  # Redis Cache
  redis:
    image: redis:8-alpine
    container_name: kindledger-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass kindledger123
    volumes:
      - ./data/redis:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: "none"
    networks:
      - fabric-net

  # Spring Boot Gateway
  gateway:
    build: 
      context: ./gateway
      dockerfile: Dockerfile
      cache_from:
        - kindledger-gateway:latest
    container_name: kindledger-gateway
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      FABRIC_NETWORKCONFIGPATH: /opt/gopath/src/github.com/hyperledger/fabric/peer/config/connection-profile.yaml
      FABRIC_CHANNELNAME: kindchannel
      FABRIC_CHAINCODENAME: cvnd-token
      FABRIC_ORGANIZATION: MBBank
      FABRIC_USER: Admin@mb.kindledger.com
      # Database configurations
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/kindledger
      SPRING_DATASOURCE_USERNAME: kindledger
      SPRING_DATASOURCE_PASSWORD: kindledger123
      SPRING_DATA_MONGODB_URI: mongodb://kindledger:kindledger123@mongodb:27017/kindledger?authSource=admin
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_REDIS_PASSWORD: kindledger123
      JAVA_OPTS: "-Xmx1g -Xms512m -XX:+UseG1GC"
    volumes:
      - ./blockchain/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
      - ./blockchain/config:/opt/gopath/src/github.com/hyperledger/fabric/peer/config
      - ./gateway/wallet:/opt/gopath/src/github.com/hyperledger/fabric/peer/wallet
      - ./blockchain/crypto-config:/app/crypto-config
      - ./data/java:/root/.m2
    depends_on:
      - postgres
      - mongodb
      - redis
      - orderer
      - peer0.mb.kindledger.com
      - peer0.charity.kindledger.com
      - peer0.supplier.kindledger.com
      - peer0.auditor.kindledger.com
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    networks:
      - fabric-net

  # Angular Frontend
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      cache_from:
        - kindledger-frontend:latest
    container_name: kindledger-frontend
    restart: unless-stopped
    ports:
      - "4200:4200"
    volumes:
      - ./data/node_modules:/app/node_modules
    depends_on:
      - gateway
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4200"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fabric-net

  # Node.js Explorer
  explorer:
    build: 
      context: ./explorer
      dockerfile: Dockerfile
      cache_from:
        - kindledger-explorer:latest
    container_name: kindledger-explorer
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
    volumes:
      - ./blockchain/crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto
      - ./blockchain/config:/opt/gopath/src/github.com/hyperledger/fabric/peer/config
      - ./explorer/wallet:/opt/gopath/src/github.com/hyperledger/fabric/peer/wallet
      # - ./data/node_modules_explorer:/app/node_modules  # Temporarily disabled
    depends_on:
      - orderer
      - peer0.mb.kindledger.com
      - peer0.charity.kindledger.com
      - peer0.supplier.kindledger.com
      - peer0.auditor.kindledger.com
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fabric-net

volumes:
  orderer_data:
    driver: local
  peer0_mb_data:
    driver: local
  peer0_charity_data:
    driver: local
  peer0_supplier_data:
    driver: local
  peer0_auditor_data:
    driver: local

networks:
  fabric-net:
    name: kindledger_fabric-net
    driver: bridge
